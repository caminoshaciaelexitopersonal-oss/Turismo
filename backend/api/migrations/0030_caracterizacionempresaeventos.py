# Generated by Django 5.2.6 on 2025-09-29 16:32

import api.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0029_remove_sugerencia_email_contacto_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="CaracterizacionEmpresaEventos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre_representante_legal",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Nombre del Representante Legal",
                    ),
                ),
                (
                    "nit",
                    models.CharField(blank=True, max_length=50, verbose_name="NIT"),
                ),
                (
                    "municipio",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Municipio"
                    ),
                ),
                (
                    "direccion_oficina",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Dirección de la Oficina",
                    ),
                ),
                (
                    "nombre_administrador",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Nombre del Administrador",
                    ),
                ),
                (
                    "celular_contacto",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Celular de Contacto"
                    ),
                ),
                (
                    "pagina_web",
                    models.URLField(blank=True, null=True, verbose_name="Página Web"),
                ),
                (
                    "tiene_rnt",
                    models.BooleanField(default=False, verbose_name="¿Cuenta con RNT?"),
                ),
                (
                    "numero_rnt",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Número RNT"
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=api.models.caracterizacion_empresa_eventos_logo_path,
                        verbose_name="Logo de la empresa",
                    ),
                ),
                ("empleados_hombres_menor_25", models.PositiveIntegerField(default=0)),
                ("empleados_hombres_25_40", models.PositiveIntegerField(default=0)),
                ("empleados_hombres_mayor_40", models.PositiveIntegerField(default=0)),
                ("empleados_mujeres_menor_25", models.PositiveIntegerField(default=0)),
                ("empleados_mujeres_25_40", models.PositiveIntegerField(default=0)),
                ("empleados_mujeres_mayor_40", models.PositiveIntegerField(default=0)),
                ("empleados_lgtbi", models.PositiveIntegerField(default=0)),
                (
                    "contratacion_empleados",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="JSON con tipos de contrato y conteo por género. Ej: {'permanentes': {'hombres': 1, 'mujeres': 2}}",
                        verbose_name="Forma de Contratación",
                    ),
                ),
                (
                    "grupos_especiales_empleados",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="JSON con conteo de empleados en grupos de atención especial. Ej: {'discapacidad_motora': 1}",
                        verbose_name="Grupo de Atención Especial",
                    ),
                ),
                (
                    "tiempo_funcionamiento",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MENOS_1_ANO", "Menos de 1 Año"),
                            ("ENTRE_1_Y_3", "Entre 1 y 3 años"),
                            ("ENTRE_3_Y_5", "Entre 3 y 5 años"),
                            ("MAS_DE_5", "Más de 5 años"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "servicios_ofrecidos",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="JSON con los servicios. Ej: {'ferias': true, 'otro': 'Servicio X'}",
                        verbose_name="Servicios Ofrecidos",
                    ),
                ),
                (
                    "forma_prestacion_servicios",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DIRECTA", "Directa (Sin intermediarios)"),
                            ("OTRA_EMPRESA", "A través de otro tipo de empresas"),
                            (
                                "AGENCIA",
                                "A través de una agencia de viajes o Tour Operador",
                            ),
                            ("OTRO", "Otro"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "forma_prestacion_servicios_otro",
                    models.CharField(blank=True, max_length=255),
                ),
                (
                    "pertenece_gremio",
                    models.BooleanField(
                        default=False, verbose_name="¿Pertenece a algún gremio?"
                    ),
                ),
                (
                    "nombre_gremio",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Nombre del Gremio"
                    ),
                ),
                (
                    "rutas_servicios",
                    models.TextField(
                        blank=True,
                        help_text="Municipios o rutas específicas.",
                        verbose_name="Rutas donde presta servicios",
                    ),
                ),
                (
                    "nivel_academico_empleados",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="JSON con niveles y conteo por género.",
                        verbose_name="Nivel Académico de Empleados",
                    ),
                ),
                (
                    "capacitaciones_recibidas",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Lista de capacitaciones. Ej: [{'nombre': '...', 'entidad': '...', 'horas': 40}]",
                        verbose_name="Capacitaciones Recibidas",
                    ),
                ),
                (
                    "tiene_certificacion_norma",
                    models.BooleanField(
                        default=False, verbose_name="¿Tiene certificación/norma?"
                    ),
                ),
                (
                    "nombre_certificacion_norma",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Nombre de la Certificación/Norma",
                    ),
                ),
                (
                    "ha_participado_ferias",
                    models.BooleanField(
                        default=False, verbose_name="¿Ha participado en ferias?"
                    ),
                ),
                (
                    "nombre_ferias",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Nombre de las Ferias"
                    ),
                ),
                (
                    "necesidades_fortalecimiento",
                    models.TextField(
                        blank=True, verbose_name="Necesidades de Fortalecimiento"
                    ),
                ),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_actualizacion", models.DateTimeField(auto_now=True)),
                (
                    "prestador",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="caracterizacion_eventos",
                        to="api.prestadorservicio",
                    ),
                ),
            ],
            options={
                "verbose_name": "Caracterización de Empresa de Eventos",
                "verbose_name_plural": "Caracterizaciones de Empresas de Eventos",
                "ordering": ["-fecha_actualizacion"],
            },
        ),
    ]
